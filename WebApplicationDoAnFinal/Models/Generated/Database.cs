




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `ShopOnlineConnection`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=PHUONGTHAO;Initial Catalog=ShopOline;Integrated Security=True`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace ShopOnlineConnection
{

	public partial class ShopOnlineConnectionDB : Database
	{
		public ShopOnlineConnectionDB() 
			: base("ShopOnlineConnection")
		{
			CommonConstruct();
		}

		public ShopOnlineConnectionDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			ShopOnlineConnectionDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static ShopOnlineConnectionDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new ShopOnlineConnectionDB();
        }

		[ThreadStatic] static ShopOnlineConnectionDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static ShopOnlineConnectionDB repo { get { return ShopOnlineConnectionDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.CHITIETDONHANG")]



	[PrimaryKey("MADONHANG", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class CHITIETDONHANG : ShopOnlineConnectionDB.Record<CHITIETDONHANG>  
    {



		[Column] public string MADONHANG { get; set; }





		[Column] public string MASP { get; set; }





		[Column] public int SOLUONG { get; set; }



	}

    

	[TableName("dbo.CHITIETGIOHANG")]



	[PrimaryKey("MAGIOHANG", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class CHITIETGIOHANG : ShopOnlineConnectionDB.Record<CHITIETGIOHANG>  
    {



		[Column] public string MAGIOHANG { get; set; }





		[Column] public string MASP { get; set; }





		[Column] public int SOLUONG { get; set; }



	}

    

	[TableName("dbo.DANHGIA")]



	[PrimaryKey("MADANHGIA", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class DANHGIUM : ShopOnlineConnectionDB.Record<DANHGIUM>  
    {



		[Column] public string MADANHGIA { get; set; }





		[Column] public string MATHANHVIEN { get; set; }





		[Column] public string MASP { get; set; }





		[Column] public string NOIDUNG { get; set; }



	}

    

	[TableName("dbo.DONHANG")]



	[PrimaryKey("MADONHANG", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class DONHANG : ShopOnlineConnectionDB.Record<DONHANG>  
    {



		[Column] public string MADONHANG { get; set; }





		[Column] public decimal TRIGIA { get; set; }





		[Column] public DateTime NGAYDONHANG { get; set; }





		[Column] public string PHUONGTHUCTHANHTOAN { get; set; }





		[Column] public string MATHANHVIEN { get; set; }





		[Column] public string MATAIKHOAN { get; set; }



	}

    

	[TableName("dbo.GIOHANG")]



	[PrimaryKey("MAGIOHANG", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class GIOHANG : ShopOnlineConnectionDB.Record<GIOHANG>  
    {



		[Column] public string MAGIOHANG { get; set; }





		[Column] public DateTime? NGAYTHEM { get; set; }



	}

    

	[TableName("dbo.LOAISP")]



	[PrimaryKey("MALOAI", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class LOAISP : ShopOnlineConnectionDB.Record<LOAISP>  
    {



		[Column] public string MALOAI { get; set; }





		[Column] public string TENLOAI { get; set; }





		[Column] public string TINHTRANG { get; set; }



	}

    

	[TableName("dbo.SANPHAM")]



	[PrimaryKey("MASP", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class SANPHAM : ShopOnlineConnectionDB.Record<SANPHAM>  
    {



		[Column] public string MASP { get; set; }





		[Column] public string TENSP { get; set; }





		[Column] public decimal GIA { get; set; }





		[Column] public string TINHTRANG { get; set; }





		[Column] public string MOTA { get; set; }





		[Column] public string HINHCHINH { get; set; }





		[Column] public string MALOAI { get; set; }



	}

    

	[TableName("dbo.TAIKHOANTHANHVIEN")]



	[PrimaryKey("MATAIKHOAN", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class TAIKHOANTHANHVIEN : ShopOnlineConnectionDB.Record<TAIKHOANTHANHVIEN>  
    {



		[Column] public string MATAIKHOAN { get; set; }





		[Column] public string MATHANHVIEN { get; set; }





		[Column] public string TENDANGNHAP { get; set; }





		[Column] public string MATKHAU { get; set; }



	}

    

	[TableName("dbo.THANHVIEN")]



	[PrimaryKey("MATHANHVIEN", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class THANHVIEN : ShopOnlineConnectionDB.Record<THANHVIEN>  
    {



		[Column] public string MATHANHVIEN { get; set; }





		[Column] public string TENTHANHVIEN { get; set; }





		[Column] public string DIACHI { get; set; }





		[Column] public string GIOITINH { get; set; }





		[Column] public string SODIENTHOAI { get; set; }



	}


}
